{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/vikramsah/Documents/BCC Data Entry Portal/UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsalAuthProvider = void 0;\n\nvar _msal = require(\"msal\");\n\nvar _AccessTokenResponse = require(\"./AccessTokenResponse\");\n\nvar _AuthenticationActionCreators = require(\"./AuthenticationActionCreators\");\n\nvar _IdTokenResponse = require(\"./IdTokenResponse\");\n\nvar _Logger = require(\"./Logger\");\n\nvar _enums = require(\"./enums\");\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar MsalAuthProvider = function (_UserAgentApplication) {\n  _inherits(MsalAuthProvider, _UserAgentApplication);\n\n  function MsalAuthProvider(_config, _parameters) {\n    var _this;\n\n    var _options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      loginType: _enums.LoginType.Popup,\n      tokenRefreshUri: window.location.origin\n    };\n\n    _classCallCheck(this, MsalAuthProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MsalAuthProvider).call(this, _config));\n\n    _defineProperty(_assertThisInitialized(_this), \"authenticationState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"UserAgentApplication\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_reduxStore\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_parameters\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_options\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_accountInfo\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_error\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onAuthenticationStateHandlers\", new Set());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onAccountInfoHandlers\", new Set());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onErrorHandlers\", new Set());\n\n    _defineProperty(_assertThisInitialized(_this), \"_actionQueue\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"login\", function () {\n      var _ref = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(parameters) {\n        var params, error, providerOptions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = parameters || _this.getAuthenticationParameters();\n                error = _this.getError();\n\n                if (error && error.errorCode !== 'block_token_requests') {\n                  _this.setError(null);\n                }\n\n                providerOptions = _this.getProviderOptions();\n\n                if (!(providerOptions.loginType === _enums.LoginType.Redirect)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _this.setAuthenticationState(_enums.AuthenticationState.InProgress);\n\n                try {\n                  _this.loginRedirect(params);\n                } catch (error) {\n                  _Logger.Logger.ERROR(error);\n\n                  _this.setError(error);\n\n                  _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n                }\n\n                _context.next = 23;\n                break;\n\n              case 9:\n                if (!(providerOptions.loginType === _enums.LoginType.Popup)) {\n                  _context.next = 23;\n                  break;\n                }\n\n                _context.prev = 10;\n\n                _this.setAuthenticationState(_enums.AuthenticationState.InProgress);\n\n                _context.next = 14;\n                return _this.loginPopup(params);\n\n              case 14:\n                _context.next = 21;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](10);\n\n                _Logger.Logger.ERROR(_context.t0);\n\n                _this.setError(_context.t0);\n\n                _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n\n              case 21:\n                _context.next = 23;\n                return _this.processLogin();\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[10, 16]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"logout\", function () {\n      _get(_getPrototypeOf(MsalAuthProvider.prototype), \"logout\", _assertThisInitialized(_this)).call(_assertThisInitialized(_this));\n\n      _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.logoutSuccessful());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAccountInfo\", function () {\n      return _this._accountInfo ? _objectSpread({}, _this._accountInfo) : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getAccessToken\", function () {\n      var _ref2 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2(parameters) {\n        var providerOptions, refreshParams, response, loginParams, _response;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                providerOptions = _this.getProviderOptions();\n                refreshParams = _objectSpread({}, parameters || _this.getAuthenticationParameters(), {\n                  redirectUri: parameters && parameters.redirectUri || providerOptions.tokenRefreshUri\n                });\n\n                if (refreshParams.extraQueryParameters && refreshParams.extraQueryParameters.domain_hint) {\n                  delete refreshParams.extraQueryParameters.domain_hint;\n                }\n\n                _context2.prev = 3;\n                _context2.next = 6;\n                return _this.acquireTokenSilent(refreshParams);\n\n              case 6:\n                response = _context2.sent;\n\n                _this.handleAcquireTokenSuccess(response);\n\n                _this.setAuthenticationState(_enums.AuthenticationState.Authenticated);\n\n                return _context2.abrupt(\"return\", new _AccessTokenResponse.AccessTokenResponse(response));\n\n              case 12:\n                _context2.prev = 12;\n                _context2.t0 = _context2[\"catch\"](3);\n                loginParams = _objectSpread({}, parameters || _this.getAuthenticationParameters());\n\n                _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.acquireAccessTokenError(_context2.t0));\n\n                _context2.next = 18;\n                return _this.loginToRefreshToken(_context2.t0, loginParams);\n\n              case 18:\n                _response = _context2.sent;\n                return _context2.abrupt(\"return\", new _AccessTokenResponse.AccessTokenResponse(_response));\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[3, 12]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getIdToken\", function () {\n      var _ref3 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3(parameters) {\n        var providerOptions, config, clientId, refreshParams, response, loginParams, account, _response2;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                providerOptions = _this.getProviderOptions();\n                config = _this.getCurrentConfiguration();\n                clientId = config.auth.clientId;\n                refreshParams = _objectSpread({}, parameters || _this.getAuthenticationParameters(), {\n                  redirectUri: parameters && parameters.redirectUri || providerOptions.tokenRefreshUri,\n                  scopes: [clientId]\n                });\n\n                if (refreshParams.extraQueryParameters && refreshParams.extraQueryParameters.domain_hint) {\n                  delete refreshParams.extraQueryParameters.domain_hint;\n                }\n\n                _context3.prev = 5;\n                _context3.next = 8;\n                return _this.acquireTokenSilent(refreshParams);\n\n              case 8:\n                response = _context3.sent;\n\n                _this.handleAcquireTokenSuccess(response);\n\n                _this.setAuthenticationState(_enums.AuthenticationState.Authenticated);\n\n                return _context3.abrupt(\"return\", new _IdTokenResponse.IdTokenResponse(response));\n\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](5);\n                loginParams = _objectSpread({}, parameters || _this.getAuthenticationParameters());\n                account = _this.getAccount();\n\n                if (account && (!parameters || !parameters.loginHint)) {\n                  loginParams.loginHint = account.userName;\n                }\n\n                _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.acquireIdTokenError(_context3.t0));\n\n                _context3.next = 22;\n                return _this.loginToRefreshToken(_context3.t0, loginParams);\n\n              case 22:\n                _response2 = _context3.sent;\n                return _context3.abrupt(\"return\", new _IdTokenResponse.IdTokenResponse(_response2));\n\n              case 24:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[5, 14]]);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"getAuthenticationParameters\", function () {\n      return _objectSpread({}, _this._parameters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getError\", function () {\n      return _this._error ? _objectSpread({}, _this._error) : null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setAuthenticationParameters\", function (parameters) {\n      _this._parameters = _objectSpread({}, parameters);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getProviderOptions\", function () {\n      return _objectSpread({}, _this._options);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setProviderOptions\", function (options) {\n      _this._options = _objectSpread({}, options);\n\n      if (options.loginType === _enums.LoginType.Redirect) {\n        _this.handleRedirectCallback(_this.authenticationRedirectCallback);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"registerReduxStore\", function (store) {\n      _this._reduxStore = store;\n\n      while (_this._actionQueue.length) {\n        var action = _this._actionQueue.shift();\n\n        if (action) {\n          _this.dispatchAction(action);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"registerAuthenticationStateHandler\", function (listener) {\n      _this._onAuthenticationStateHandlers.add(listener);\n\n      listener(_this.authenticationState);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterAuthenticationStateHandler\", function (listener) {\n      _this._onAuthenticationStateHandlers[\"delete\"](listener);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"registerAcountInfoHandler\", function (listener) {\n      _this._onAccountInfoHandlers.add(listener);\n\n      listener(_this._accountInfo);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterAccountInfoHandler\", function (listener) {\n      _this._onAccountInfoHandlers[\"delete\"](listener);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"registerErrorHandler\", function (listener) {\n      _this._onErrorHandlers.add(listener);\n\n      listener(_this._error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"unregisterErrorHandler\", function (listener) {\n      _this._onErrorHandlers[\"delete\"](listener);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setError\", function (error) {\n      _this._error = error ? _objectSpread({}, error) : null;\n\n      if (error) {\n        _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.loginError(error));\n      }\n\n      _this._onErrorHandlers.forEach(function (listener) {\n        return listener(_this._error);\n      });\n\n      return _objectSpread({}, _this._error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loginToRefreshToken\", function () {\n      var _ref4 = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4(error, parameters) {\n        var providerOptions, params, response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                providerOptions = _this.getProviderOptions();\n                params = parameters || _this.getAuthenticationParameters();\n\n                if (!(error instanceof _msal.InteractionRequiredAuthError)) {\n                  _context4.next = 23;\n                  break;\n                }\n\n                if (!(providerOptions.loginType === _enums.LoginType.Redirect)) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                _this.acquireTokenRedirect(params);\n\n                return _context4.abrupt(\"return\", new Promise(function (resolve) {\n                  return resolve();\n                }));\n\n              case 6:\n                _context4.prev = 6;\n                _context4.next = 9;\n                return _this.acquireTokenPopup(params);\n\n              case 9:\n                response = _context4.sent;\n\n                _this.handleAcquireTokenSuccess(response);\n\n                _this.setAuthenticationState(_enums.AuthenticationState.Authenticated);\n\n                return _context4.abrupt(\"return\", response);\n\n              case 15:\n                _context4.prev = 15;\n                _context4.t0 = _context4[\"catch\"](6);\n\n                _Logger.Logger.ERROR(_context4.t0);\n\n                _this.setError(_context4.t0);\n\n                _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n\n                throw _context4.t0;\n\n              case 21:\n                _context4.next = 27;\n                break;\n\n              case 23:\n                _Logger.Logger.ERROR(error);\n\n                _this.setError(error);\n\n                _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n\n                throw error;\n\n              case 27:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[6, 15]]);\n      }));\n\n      return function (_x4, _x5) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"authenticationRedirectCallback\", function (error) {\n      if (error) {\n        _this.setError(error);\n      }\n\n      _this.processLogin();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initializeProvider\", _asyncToGenerator(_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.initializing());\n\n              _context5.next = 3;\n              return _this.processLogin();\n\n            case 3:\n              _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.initialized());\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"processLogin\", _asyncToGenerator(_regeneratorRuntime.mark(function _callee6() {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!_this.getError()) {\n                _context6.next = 5;\n                break;\n              }\n\n              _this.handleLoginFailed();\n\n              _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n\n              _context6.next = 19;\n              break;\n\n            case 5:\n              if (!_this.getAccount()) {\n                _context6.next = 18;\n                break;\n              }\n\n              _context6.prev = 6;\n              _context6.next = 9;\n              return _this.getIdToken();\n\n            case 9:\n              _this.handleLoginSuccess();\n\n              _context6.next = 16;\n              break;\n\n            case 12:\n              _context6.prev = 12;\n              _context6.t0 = _context6[\"catch\"](6);\n\n              if (!(_context6.t0 instanceof _msal.ClientAuthError && _context6.t0.errorCode === 'user_login_error')) {\n                _Logger.Logger.ERROR(_context6.t0);\n\n                _this.setError(_context6.t0);\n              }\n\n              _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n\n            case 16:\n              _context6.next = 19;\n              break;\n\n            case 18:\n              if (_this.getLoginInProgress()) {\n                _this.setAuthenticationState(_enums.AuthenticationState.InProgress);\n              } else {\n                _this.setAuthenticationState(_enums.AuthenticationState.Unauthenticated);\n              }\n\n            case 19:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[6, 12]]);\n    })));\n\n    _defineProperty(_assertThisInitialized(_this), \"setAuthenticationState\", function (state) {\n      if (_this.authenticationState !== state) {\n        _this.authenticationState = state;\n\n        _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.authenticatedStateChanged(state));\n\n        _this._onAuthenticationStateHandlers.forEach(function (listener) {\n          return listener(state);\n        });\n      }\n\n      return _this.authenticationState;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setAccountInfo\", function (response) {\n      var accountInfo = _this.getAccountInfo() || {\n        account: response.account\n      };\n\n      if (response.tokenType === _enums.TokenType.IdToken) {\n        accountInfo.jwtIdToken = response.idToken.rawIdToken;\n      } else if (response.tokenType === _enums.TokenType.AccessToken) {\n        accountInfo.jwtAccessToken = response.accessToken;\n      }\n\n      _this._accountInfo = _objectSpread({}, accountInfo);\n\n      _this._onAccountInfoHandlers.forEach(function (listener) {\n        return listener(_this._accountInfo);\n      });\n\n      return _objectSpread({}, _this._accountInfo);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dispatchAction\", function (action) {\n      if (_this._reduxStore) {\n        _this._reduxStore.dispatch(action);\n      } else {\n        _this._actionQueue.push(action);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAcquireTokenSuccess\", function (response) {\n      _this.setAccountInfo(response);\n\n      if (response.tokenType === _enums.TokenType.IdToken) {\n        var token = new _IdTokenResponse.IdTokenResponse(response);\n\n        _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.acquireIdTokenSuccess(token));\n      } else if (response.tokenType === _enums.TokenType.AccessToken) {\n        var _token = new _AccessTokenResponse.AccessTokenResponse(response);\n\n        _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.acquireAccessTokenSuccess(_token));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLoginFailed\", function () {\n      var error = _this.getError();\n\n      if (error) {\n        _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.loginFailed());\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLoginSuccess\", function () {\n      var account = _this.getAccountInfo();\n\n      if (account) {\n        _this.dispatchAction(_AuthenticationActionCreators.AuthenticationActionCreators.loginSuccessful(account));\n      }\n    });\n\n    _this.UserAgentApplication = _assertThisInitialized(_this);\n\n    _this.setAuthenticationParameters(_parameters);\n\n    _this.setProviderOptions(_options);\n\n    _this.initializeProvider();\n\n    return _this;\n  }\n\n  return MsalAuthProvider;\n}(_msal.UserAgentApplication);\n\nexports.MsalAuthProvider = MsalAuthProvider;","map":{"version":3,"sources":["../../src/MsalAuthProvider.ts"],"names":["MsalAuthProvider","UserAgentApplication","options","loginType","LoginType","tokenRefreshUri","window","origin","params","parameters","error","providerOptions","AuthenticationState","Logger","AuthenticationActionCreators","refreshParams","redirectUri","response","AccessTokenResponse","loginParams","config","clientId","scopes","IdTokenResponse","account","action","listener","InteractionRequiredAuthError","resolve","ClientAuthError","accountInfo","TokenType","token"],"mappings":"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","sourcesContent":["import {\n  AuthenticationParameters,\n  AuthError,\n  AuthResponse,\n  ClientAuthError,\n  Configuration,\n  InteractionRequiredAuthError,\n  UserAgentApplication,\n} from 'msal';\nimport { AnyAction, Store } from 'redux';\n\nimport { AccessTokenResponse } from './AccessTokenResponse';\nimport { AuthenticationActionCreators } from './AuthenticationActionCreators';\nimport { IdTokenResponse } from './IdTokenResponse';\nimport { IAccountInfo, IAuthProvider, IMsalAuthProviderConfig } from './interfaces';\nimport { Logger } from './Logger';\nimport { AuthenticationState, LoginType, TokenType } from './enums';\n\ntype AuthenticationStateHandler = (state: AuthenticationState) => void;\ntype ErrorHandler = (error: AuthError | null) => void;\ntype AccountInfoHandlers = (accountInfo: IAccountInfo | null) => void;\n\nexport class MsalAuthProvider extends UserAgentApplication implements IAuthProvider {\n  public authenticationState: AuthenticationState;\n\n  /**\n   * Gives access to the MSAL functionality for advanced usage.\n   *\n   * @deprecated The MsalAuthProvider class itself extends from UserAgentApplication and has the same functionality\n   */\n  public UserAgentApplication: UserAgentApplication;\n\n  protected _reduxStore: Store;\n  protected _parameters: AuthenticationParameters;\n  protected _options: IMsalAuthProviderConfig;\n  protected _accountInfo: IAccountInfo | null;\n  protected _error: AuthError | null;\n\n  private _onAuthenticationStateHandlers = new Set<AuthenticationStateHandler>();\n  private _onAccountInfoHandlers = new Set<AccountInfoHandlers>();\n  private _onErrorHandlers = new Set<ErrorHandler>();\n  private _actionQueue: AnyAction[] = [];\n\n  constructor(\n    config: Configuration,\n    parameters: AuthenticationParameters,\n    options: IMsalAuthProviderConfig = {\n      loginType: LoginType.Popup,\n      tokenRefreshUri: window.location.origin,\n    },\n  ) {\n    super(config);\n\n    // Required only for backward compatibility\n    this.UserAgentApplication = this as UserAgentApplication;\n\n    this.setAuthenticationParameters(parameters);\n    this.setProviderOptions(options);\n\n    this.initializeProvider();\n  }\n\n  public login = async (parameters?: AuthenticationParameters) => {\n    const params = parameters || this.getAuthenticationParameters();\n\n    // Clear any active authentication errors unless the code is executing from within\n    // the token renewal iframe\n    const error = this.getError();\n    if (error && error.errorCode !== 'block_token_requests') {\n      this.setError(null);\n    }\n\n    const providerOptions = this.getProviderOptions();\n    if (providerOptions.loginType === LoginType.Redirect) {\n      this.setAuthenticationState(AuthenticationState.InProgress);\n      try {\n        this.loginRedirect(params);\n      } catch (error) {\n        Logger.ERROR(error);\n\n        this.setError(error);\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n      }\n    } else if (providerOptions.loginType === LoginType.Popup) {\n      try {\n        this.setAuthenticationState(AuthenticationState.InProgress);\n        await this.loginPopup(params);\n      } catch (error) {\n        Logger.ERROR(error);\n\n        this.setError(error);\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n      }\n\n      await this.processLogin();\n    }\n  };\n\n  public logout = (): void => {\n    super.logout();\n\n    this.dispatchAction(AuthenticationActionCreators.logoutSuccessful());\n  };\n\n  public getAccountInfo = (): IAccountInfo | null => {\n    return this._accountInfo ? { ...this._accountInfo } : null;\n  };\n\n  public getAccessToken = async (parameters?: AuthenticationParameters): Promise<AccessTokenResponse> => {\n    const providerOptions = this.getProviderOptions();\n\n    // The parameters to be used when silently refreshing the token\n    const refreshParams = {\n      ...(parameters || this.getAuthenticationParameters()),\n      // Use the redirectUri that was passed, otherwise use the configured tokenRefreshUri\n      redirectUri: (parameters && parameters.redirectUri) || providerOptions.tokenRefreshUri,\n    };\n\n    /* In this library, acquireTokenSilent is being called only when there is an accountInfo of an expired session.\n        *  In a scenario where user interaction is required, username from the account info is passed as 'login_hint'\n        *  parameter which redirects user to user's organization login page. So 'domain_hint' is not required to be\n        *  passed for silent calls. Hence, the below code is to avoid sending domain_hint. This also solves the issue\n        *  of multiple domain_hint param being added by the MSAL.js.\n    */\n    if (refreshParams.extraQueryParameters && refreshParams.extraQueryParameters.domain_hint) {\n      delete refreshParams.extraQueryParameters.domain_hint;\n    }\n\n    try {\n      const response = await this.acquireTokenSilent(refreshParams);\n\n      this.handleAcquireTokenSuccess(response);\n      this.setAuthenticationState(AuthenticationState.Authenticated);\n\n      return new AccessTokenResponse(response);\n    } catch (error) {\n      // The parameters to be used if silent refresh failed, and a new login needs to be initiated\n      const loginParams = {\n        ...(parameters || this.getAuthenticationParameters()),\n      };\n\n      this.dispatchAction(AuthenticationActionCreators.acquireAccessTokenError(error));\n      const response = await this.loginToRefreshToken(error, loginParams);\n\n      return new AccessTokenResponse(response);\n    }\n  };\n\n  public getIdToken = async (parameters?: AuthenticationParameters): Promise<IdTokenResponse> => {\n    const providerOptions = this.getProviderOptions();\n    const config = this.getCurrentConfiguration();\n    const clientId = config.auth.clientId;\n\n    // The parameters to be used when silently refreshing the token\n    const refreshParams = {\n      ...(parameters || this.getAuthenticationParameters()),\n      // Use the redirectUri that was passed, otherwise use the configured tokenRefreshUri\n      redirectUri: (parameters && parameters.redirectUri) || providerOptions.tokenRefreshUri,\n      // Pass the clientId as the only scope to get a renewed IdToken if it has expired\n      scopes: [clientId],\n    };\n\n    /* In this library, acquireTokenSilent is being called only when there is an accountInfo of an expired session.\n        *  In a scenario where user interaction is required, username from the account info is passed as 'login_hint'\n        *  parameter which redirects user to user's organization login page. So 'domain_hint' is not required to be\n        *  passed for silent calls. Hence, the below code is to avoid sending domain_hint. This also solves the issue\n        *  of multiple domain_hint param being added by the MSAL.js.\n    */\n    if (refreshParams.extraQueryParameters && refreshParams.extraQueryParameters.domain_hint) {\n      delete refreshParams.extraQueryParameters.domain_hint;\n    }\n\n    try {\n      const response = await this.acquireTokenSilent(refreshParams);\n\n      this.handleAcquireTokenSuccess(response);\n      this.setAuthenticationState(AuthenticationState.Authenticated);\n\n      return new IdTokenResponse(response);\n    } catch (error) {\n      // The parameters to be used if silent refresh failed, and a new login needs to be initiated\n      const loginParams = {\n        ...(parameters || this.getAuthenticationParameters()),\n      };\n\n      // If the parameters do not specify a login hint and the user already has a session cached,\n      // prefer the cached user name to bypass the account selection process if possible\n      const account = this.getAccount();\n      if (account && (!parameters || !parameters.loginHint)) {\n        loginParams.loginHint = account.userName;\n      }\n\n      this.dispatchAction(AuthenticationActionCreators.acquireIdTokenError(error));\n      const response = await this.loginToRefreshToken(error, loginParams);\n\n      return new IdTokenResponse(response);\n    }\n  };\n\n  public getAuthenticationParameters = (): AuthenticationParameters => {\n    return { ...this._parameters };\n  };\n\n  public getError = () => {\n    return this._error ? { ...this._error } : null;\n  };\n\n  public setAuthenticationParameters = (parameters: AuthenticationParameters): void => {\n    this._parameters = { ...parameters };\n  };\n\n  public getProviderOptions = (): IMsalAuthProviderConfig => {\n    return { ...this._options };\n  };\n\n  public setProviderOptions = (options: IMsalAuthProviderConfig) => {\n    this._options = { ...options };\n    if (options.loginType === LoginType.Redirect) {\n      this.handleRedirectCallback(this.authenticationRedirectCallback);\n    }\n  };\n\n  public registerReduxStore = (store: Store): void => {\n    this._reduxStore = store;\n    while (this._actionQueue.length) {\n      const action = this._actionQueue.shift();\n      if (action) {\n        this.dispatchAction(action);\n      }\n    }\n  };\n\n  public registerAuthenticationStateHandler = (listener: AuthenticationStateHandler) => {\n    this._onAuthenticationStateHandlers.add(listener);\n    listener(this.authenticationState);\n  };\n\n  public unregisterAuthenticationStateHandler = (listener: AuthenticationStateHandler) => {\n    this._onAuthenticationStateHandlers.delete(listener);\n  };\n\n  public registerAcountInfoHandler = (listener: AccountInfoHandlers) => {\n    this._onAccountInfoHandlers.add(listener);\n    listener(this._accountInfo);\n  };\n\n  public unregisterAccountInfoHandler = (listener: AccountInfoHandlers) => {\n    this._onAccountInfoHandlers.delete(listener);\n  };\n\n  public registerErrorHandler = (listener: ErrorHandler) => {\n    this._onErrorHandlers.add(listener);\n    listener(this._error);\n  };\n\n  public unregisterErrorHandler = (listener: ErrorHandler) => {\n    this._onErrorHandlers.delete(listener);\n  };\n\n  private setError = (error: AuthError | null) => {\n    this._error = error ? { ...error } : null;\n\n    if (error) {\n      this.dispatchAction(AuthenticationActionCreators.loginError(error));\n    }\n\n    this._onErrorHandlers.forEach(listener => listener(this._error));\n\n    return { ...this._error };\n  };\n\n  private loginToRefreshToken = async (\n    error: AuthError,\n    parameters?: AuthenticationParameters,\n  ): Promise<AuthResponse> => {\n    const providerOptions = this.getProviderOptions();\n    const params = parameters || this.getAuthenticationParameters();\n\n    if (error instanceof InteractionRequiredAuthError) {\n      if (providerOptions.loginType === LoginType.Redirect) {\n        this.acquireTokenRedirect(params);\n\n        // Nothing to return, the user is redirected to the login page\n        return new Promise<AuthResponse>(resolve => resolve());\n      }\n\n      try {\n        const response = await this.acquireTokenPopup(params);\n        this.handleAcquireTokenSuccess(response);\n        this.setAuthenticationState(AuthenticationState.Authenticated);\n        return response;\n      } catch (error) {\n        Logger.ERROR(error);\n\n        this.setError(error);\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n\n        throw error;\n      }\n    } else {\n      Logger.ERROR(error as any);\n\n      this.setError(error);\n      this.setAuthenticationState(AuthenticationState.Unauthenticated);\n\n      throw error;\n    }\n  };\n\n  private authenticationRedirectCallback = (error: AuthError) => {\n    if (error) {\n      this.setError(error);\n    }\n    this.processLogin();\n  };\n\n  private initializeProvider = async () => {\n    this.dispatchAction(AuthenticationActionCreators.initializing());\n\n    await this.processLogin();\n\n    this.dispatchAction(AuthenticationActionCreators.initialized());\n  };\n\n  private processLogin = async () => {\n    if (this.getError()) {\n      this.handleLoginFailed();\n\n      this.setAuthenticationState(AuthenticationState.Unauthenticated);\n    } else if (this.getAccount()) {\n      try {\n        // If the IdToken has expired, refresh it. Otherwise use the cached token\n        await this.getIdToken();\n\n        this.handleLoginSuccess();\n      } catch (error) {\n        // Swallow the error if the user isn't authenticated, just set to Unauthenticated\n        if (!(error instanceof ClientAuthError && error.errorCode === 'user_login_error')) {\n          Logger.ERROR(error);\n          this.setError(error);\n        }\n\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n      }\n    } else if (this.getLoginInProgress()) {\n      this.setAuthenticationState(AuthenticationState.InProgress);\n    } else {\n      this.setAuthenticationState(AuthenticationState.Unauthenticated);\n    }\n  };\n\n  private setAuthenticationState = (state: AuthenticationState): AuthenticationState => {\n    if (this.authenticationState !== state) {\n      this.authenticationState = state;\n\n      this.dispatchAction(AuthenticationActionCreators.authenticatedStateChanged(state));\n      this._onAuthenticationStateHandlers.forEach(listener => listener(state));\n    }\n\n    return this.authenticationState;\n  };\n\n  private setAccountInfo = (response: AuthResponse): IAccountInfo => {\n    const accountInfo: IAccountInfo = this.getAccountInfo() || ({ account: response.account } as IAccountInfo);\n\n    // Depending on the token type of the auth response, update the correct property\n    if (response.tokenType === TokenType.IdToken) {\n      accountInfo.jwtIdToken = response.idToken.rawIdToken;\n    } else if (response.tokenType === TokenType.AccessToken) {\n      accountInfo.jwtAccessToken = response.accessToken;\n    }\n\n    this._accountInfo = { ...accountInfo };\n    this._onAccountInfoHandlers.forEach(listener => listener(this._accountInfo));\n\n    return { ...this._accountInfo };\n  };\n\n  private dispatchAction = (action: AnyAction): void => {\n    if (this._reduxStore) {\n      this._reduxStore.dispatch(action);\n    } else {\n      this._actionQueue.push(action);\n    }\n  };\n\n  private handleAcquireTokenSuccess = (response: AuthResponse): void => {\n    this.setAccountInfo(response);\n\n    if (response.tokenType === TokenType.IdToken) {\n      const token = new IdTokenResponse(response);\n      this.dispatchAction(AuthenticationActionCreators.acquireIdTokenSuccess(token));\n    } else if (response.tokenType === TokenType.AccessToken) {\n      const token = new AccessTokenResponse(response);\n      this.dispatchAction(AuthenticationActionCreators.acquireAccessTokenSuccess(token));\n    }\n  };\n\n  private handleLoginFailed = (): void => {\n    const error = this.getError();\n    if (error) {\n      this.dispatchAction(AuthenticationActionCreators.loginFailed());\n    }\n  };\n\n  private handleLoginSuccess = (): void => {\n    const account = this.getAccountInfo();\n    if (account) {\n      this.dispatchAction(AuthenticationActionCreators.loginSuccessful(account));\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"script"}