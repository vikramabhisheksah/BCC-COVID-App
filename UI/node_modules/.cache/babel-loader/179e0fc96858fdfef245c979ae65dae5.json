{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AccessTokenResponse = void 0;\n\nvar _enums = require(\"./enums\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar AccessTokenResponse = function AccessTokenResponse(response) {\n  _classCallCheck(this, AccessTokenResponse);\n\n  _defineProperty(this, \"accessToken\", '');\n\n  _defineProperty(this, \"scopes\", []);\n\n  _defineProperty(this, \"expiresOn\", void 0);\n\n  _defineProperty(this, \"state\", '');\n\n  if (response.tokenType !== _enums.TokenType.AccessToken) {\n    throw new Error(\"Can't construct an AccessTokenResponse from a AuthResponse that has a token type of \\\"\".concat(response.tokenType, \"\\\".\"));\n  }\n\n  this.accessToken = response.accessToken;\n  this.expiresOn = response.expiresOn;\n  this.scopes = response.scopes;\n  this.state = response.accountState;\n};\n\nexports.AccessTokenResponse = AccessTokenResponse;","map":{"version":3,"sources":["../../src/AccessTokenResponse.ts"],"names":["AccessTokenResponse","response","TokenType"],"mappings":";;;;;;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;IAEaA,mB,GAMX,SAAA,mBAAA,CAAA,QAAA,EAAoC;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,mBAAA,CAAA;;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,aAAA,EALf,EAKe,CAAA;;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAJV,EAIU,CAAA;;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,OAAA,EAFrB,EAEqB,CAAA;;AAClC,MAAIC,QAAQ,CAARA,SAAAA,KAAuBC,MAAAA,CAAAA,SAAAA,CAA3B,WAAA,EAAkD;AAChD,UAAM,IAAA,KAAA,CAAA,yFAAA,MAAA,CACoFD,QAAQ,CAD5F,SAAA,EAAN,KAAM,CAAA,CAAN;AAGD;;AAED,OAAA,WAAA,GAAmBA,QAAQ,CAA3B,WAAA;AACA,OAAA,SAAA,GAAiBA,QAAQ,CAAzB,SAAA;AACA,OAAA,MAAA,GAAcA,QAAQ,CAAtB,MAAA;AACA,OAAA,KAAA,GAAaA,QAAQ,CAArB,YAAA","sourcesContent":["import { AuthResponse } from 'msal';\n\nimport { TokenType } from './enums';\n\nexport class AccessTokenResponse {\n  public accessToken = '';\n  public scopes: string[] = [];\n  public expiresOn: Date;\n  public state = '';\n\n  constructor(response: AuthResponse) {\n    if (response.tokenType !== TokenType.AccessToken) {\n      throw new Error(\n        `Can't construct an AccessTokenResponse from a AuthResponse that has a token type of \"${response.tokenType}\".`,\n      );\n    }\n\n    this.accessToken = response.accessToken;\n    this.expiresOn = response.expiresOn;\n    this.scopes = response.scopes;\n    this.state = response.accountState;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}