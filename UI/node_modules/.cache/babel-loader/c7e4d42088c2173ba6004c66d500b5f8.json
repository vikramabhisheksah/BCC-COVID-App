{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vikramsah/Documents/BCC Data Entry Portal/UI/src/Pages/PatientInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\nconst genderItems = [{\n  id: 'male',\n  title: 'Male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialFValues = {\n  name_first: '',\n  name_middle: '',\n  name_last: '',\n  dob: '',\n  phone1: '',\n  phone1_type: '',\n  phone1_text_yn: '',\n  phone2_yn: '',\n  phone2: '',\n  phone2_type: '',\n  phone2_text_yn: '',\n  contact_besttime_survey: '',\n  address1: '',\n  address2: '',\n  city: '',\n  state: '',\n  zipcode: '',\n  voicemail_yn_survey: '',\n  copd_yn_survey: '',\n  copd_exacerbation_yn_survey: '',\n  smoking_yn_survey: '',\n  smoking_now_yn_survey: '',\n  smoking_start_survey: '',\n  smoking_stop_survey: '',\n  smoking_amount_survey: '',\n  rx_bp_yn_survey: '',\n  rx_bp_survey: '',\n  recruitment_source_survey: '',\n  recruitment_source_other_survey: '',\n  current_age: '',\n  gender: 'male',\n  race: '',\n  ethnicity: '',\n  email_yn: '',\n  email: '',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\nexport default function patient_info() {\n  _s();\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues === values) return Object.values(temp).every(x => x === \"\");\n  };\n\n  const {\n    values,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      employeeService.insertEmployee(values);\n      resetForm();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"firstName\",\n          label: \"First Name\",\n          value: values.name_first,\n          onChange: handleInputChange,\n          error: errors.name_first\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"middleName\",\n          label: \"Middle Name\",\n          value: values.name_middle,\n          onChange: handleInputChange,\n          error: errors.name_middle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"lastName\",\n          label: \"Last Name\",\n          value: values.name_last,\n          onChange: handleInputChange,\n          error: errors.name_last\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Email\",\n          name: \"email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Mobile\",\n          name: \"mobile\",\n          value: values.mobile,\n          onChange: handleInputChange,\n          error: errors.mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"City\",\n          name: \"city\",\n          value: values.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"gender\",\n          label: \"Gender\",\n          value: values.gender,\n          onChange: handleInputChange,\n          items: genderItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"departmentId\",\n          label: \"Department\",\n          value: values.departmentId,\n          onChange: handleInputChange,\n          options: employeeService.getDepartmentCollection(),\n          error: errors.departmentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n          name: \"hireDate\",\n          label: \"Hire Date\",\n          value: values.hireDate,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n          name: \"isPermanent\",\n          label: \"Permanent Employee\",\n          value: values.isPermanent,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            text: \"Reset\",\n            color: \"default\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(patient_info, \"Lx4h/j9e6ilDnvQMkDp75exGAx4=\", false, function () {\n  return [useForm];\n});","map":{"version":3,"sources":["/Users/vikramsah/Documents/BCC Data Entry Portal/UI/src/Pages/PatientInfo.jsx"],"names":["React","Grid","Controls","useForm","Form","employeeService","genderItems","id","title","initialFValues","name_first","name_middle","name_last","dob","phone1","phone1_type","phone1_text_yn","phone2_yn","phone2","phone2_type","phone2_text_yn","contact_besttime_survey","address1","address2","city","state","zipcode","voicemail_yn_survey","copd_yn_survey","copd_exacerbation_yn_survey","smoking_yn_survey","smoking_now_yn_survey","smoking_start_survey","smoking_stop_survey","smoking_amount_survey","rx_bp_yn_survey","rx_bp_survey","recruitment_source_survey","recruitment_source_other_survey","current_age","gender","race","ethnicity","email_yn","email","departmentId","hireDate","Date","isPermanent","patient_info","validate","fieldValues","values","temp","errors","fullName","test","mobile","length","setErrors","Object","every","x","handleInputChange","resetForm","handleSubmit","e","preventDefault","insertEmployee","getDepartmentCollection"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid, } from '@material-ui/core';\nimport Controls from \"../../components/controls/Controls\";\nimport { useForm, Form } from '../../components/useForm';\nimport * as employeeService from \"../../services/employeeService\";\n\n\nconst genderItems = [\n    { id: 'male', title: 'Male' },\n    { id: 'female', title: 'Female' },\n    { id: 'other', title: 'Other' },\n]\n\nconst initialFValues = {\n    name_first: '',\n    name_middle:'',\n    name_last:'',\n    dob:'',\n    phone1:'',\n    phone1_type:'',\n    phone1_text_yn:'',\n    phone2_yn:'',\n    phone2:'',\n    phone2_type:'',\n    phone2_text_yn:'',\n    contact_besttime_survey:'',\n    address1:'',\n    address2:'',\n    city: '',\n    state:'',\n    zipcode:'',\n    voicemail_yn_survey:'',\n    copd_yn_survey:'',\n    copd_exacerbation_yn_survey:'',\n    smoking_yn_survey:'',\n    smoking_now_yn_survey:'',\n    smoking_start_survey:'',\n    smoking_stop_survey:'',\n    smoking_amount_survey:'',\n    rx_bp_yn_survey:'',\n    rx_bp_survey:'',\n    recruitment_source_survey:'',\n    recruitment_source_other_survey:'',\n    current_age:'',\n    gender: 'male',\n    race:'',\n    ethnicity:'',\n    email_yn:'',\n    email:'',\n\n    departmentId: '',\n    hireDate: new Date(),\n    isPermanent: false,\n}\n\nexport default function patient_info() {\n\n    const validate = (fieldValues = values) => {\n        let temp = { ...errors }\n        if ('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\n        if ('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\n        if ('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\n        if ('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length !== 0 ? \"\" : \"This field is required.\"\n        setErrors({\n            ...temp\n        })\n\n        if (fieldValues === values)\n            return Object.values(temp).every(x => x === \"\")\n    }\n\n    const {\n        values,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (validate()){\n            employeeService.insertEmployee(values)\n            resetForm()\n        }\n    }\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"firstName\"\n                        label=\"First Name\"\n                        value={values.name_first}\n                        onChange={handleInputChange}\n                        error={errors.name_first}\n                    />\n                    <Controls.Input\n                        name=\"middleName\"\n                        label=\"Middle Name\"\n                        value={values.name_middle}\n                        onChange={handleInputChange}\n                        error={errors.name_middle}\n                    />\n                    <Controls.Input\n                        name=\"lastName\"\n                        label=\"Last Name\"\n                        value={values.name_last}\n                        onChange={handleInputChange}\n                        error={errors.name_last}\n                    />\n                    <Controls.Input\n                        label=\"Email\"\n                        name=\"email\"\n                        value={values.email}\n                        onChange={handleInputChange}\n                        error={errors.email}\n                    />\n                    <Controls.Input\n                        label=\"Mobile\"\n                        name=\"mobile\"\n                        value={values.mobile}\n                        onChange={handleInputChange}\n                        error={errors.mobile}\n                    />\n                    <Controls.Input\n                        label=\"City\"\n                        name=\"city\"\n                        value={values.city}\n                        onChange={handleInputChange}\n                    />\n\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup\n                        name=\"gender\"\n                        label=\"Gender\"\n                        value={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n\n                    <div>\n                        <Controls.Button\n                            type=\"submit\"\n                            text=\"Submit\" />\n                        <Controls.Button\n                            text=\"Reset\"\n                            color=\"default\"\n                            onClick={resetForm} />\n                    </div>\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}