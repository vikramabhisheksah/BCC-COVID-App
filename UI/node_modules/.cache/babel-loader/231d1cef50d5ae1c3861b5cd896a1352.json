{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AzureAD = void 0;\n\nvar _react = require(\"react\");\n\nvar _enums = require(\"../enums\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar AzureAD = function AzureAD(props) {\n  var authenticatedFunction = props.authenticatedFunction,\n      unauthenticatedFunction = props.unauthenticatedFunction,\n      provider = props.provider,\n      forceLogin = props.forceLogin,\n      accountInfoCallback = props.accountInfoCallback;\n\n  var _useState = (0, _react.useState)(provider.getAccountInfo()),\n      _useState2 = _slicedToArray(_useState, 2),\n      accountInfo = _useState2[0],\n      _setAccountInfo = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(provider.authenticationState),\n      _useState4 = _slicedToArray(_useState3, 2),\n      authenticationState = _useState4[0],\n      _setAuthenticationState = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(provider.getError()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      _setError = _useState6[1];\n\n  (0, _react.useEffect)(function () {\n    provider.registerAuthenticationStateHandler(setAuthenticationState);\n    provider.registerAcountInfoHandler(onAccountInfoChanged);\n    provider.registerErrorHandler(setError);\n\n    if (props.reduxStore) {\n      provider.registerReduxStore(props.reduxStore);\n    }\n\n    if (forceLogin && authenticationState === _enums.AuthenticationState.Unauthenticated && !error) {\n      login();\n    }\n\n    return function () {\n      provider.unregisterAuthenticationStateHandler(setAuthenticationState);\n      provider.unregisterAccountInfoHandler(onAccountInfoChanged);\n      provider.unregisterErrorHandler(setError);\n    };\n  }, [authenticationState, accountInfo, error]);\n  var login = (0, _react.useCallback)(function () {\n    provider.login();\n  }, [provider]);\n  var logout = (0, _react.useCallback)(function () {\n    if (authenticationState !== _enums.AuthenticationState.Authenticated) {\n      return;\n    }\n\n    provider.logout();\n  }, [authenticationState, provider]);\n  var setAuthenticationState = (0, _react.useCallback)(function (newState) {\n    if (newState !== authenticationState) {\n      _setAuthenticationState(newState);\n\n      if (newState === _enums.AuthenticationState.Unauthenticated && forceLogin && !error) {\n        login();\n      }\n    }\n  }, [authenticationState, forceLogin, error]);\n  var setError = (0, _react.useCallback)(function (newError) {\n    if (newError !== error) {\n      _setError(newError);\n    }\n  }, [error]);\n  var onAccountInfoChanged = (0, _react.useCallback)(function (newAccountInfo) {\n    _setAccountInfo(newAccountInfo);\n\n    if (accountInfoCallback) {\n      console.warn('Warning! The accountInfoCallback callback has been deprecated and will be removed in a future release.');\n      accountInfoCallback(newAccountInfo);\n    }\n  }, [accountInfoCallback]);\n  var childrenFunctionProps = (0, _react.useMemo)(function () {\n    return {\n      accountInfo: accountInfo,\n      authenticationState: authenticationState,\n      error: error,\n      login: login,\n      logout: logout\n    };\n  }, [accountInfo, authenticationState, error, login, logout]);\n\n  function getChildrenOrFunction(children, childrenProps) {\n    if (children) {\n      if (isChildrenFunction(children)) {\n        return children(childrenProps);\n      } else {\n        return children;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  function isChildrenFunction(children) {\n    return typeof children == 'function' || false;\n  }\n\n  switch (authenticationState) {\n    case _enums.AuthenticationState.Authenticated:\n      if (authenticatedFunction) {\n        var authFunctionResult = authenticatedFunction(logout);\n        console.warn('Warning! The authenticatedFunction callback has been deprecated and will be removed in a future release.');\n\n        if (authFunctionResult) {\n          return authFunctionResult;\n        }\n      }\n\n      return getChildrenOrFunction(props.children, childrenFunctionProps);\n\n    case _enums.AuthenticationState.Unauthenticated:\n      if (unauthenticatedFunction) {\n        console.warn('Warning! The unauthenticatedFunction callback has been deprecated and will be removed in a future release.');\n        return unauthenticatedFunction(login) || null;\n      }\n\n    case _enums.AuthenticationState.InProgress:\n      if (isChildrenFunction(props.children)) {\n        return getChildrenOrFunction(props.children, childrenFunctionProps);\n      }\n\n      return null;\n\n    default:\n      return null;\n  }\n};\n\nexports.AzureAD = AzureAD;\nAzureAD.displayName = 'AzureAD';","map":{"version":3,"sources":["../../../src/components/AzureAD.tsx"],"names":["AzureAD","authenticatedFunction","unauthenticatedFunction","provider","forceLogin","accountInfoCallback","props","accountInfo","_setAccountInfo","authenticationState","_setAuthenticationState","error","_setError","AuthenticationState","login","logout","setAuthenticationState","newState","setError","newError","onAccountInfoChanged","console","childrenFunctionProps","isChildrenFunction","children","authFunctionResult","getChildrenOrFunction"],"mappings":"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","sourcesContent":["import { default as React, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Store } from 'redux';\n\nimport { AuthError } from 'msal';\nimport { MsalAuthProvider } from '..';\nimport { IAccountInfo } from '../interfaces';\nimport { AuthenticationState } from '../enums';\n\ntype AccountInfoCallback = (token: IAccountInfo) => void;\ntype UnauthenticatedFunction = (login: LoginFunction) => JSX.Element;\ntype AuthenticatedFunction = (logout: LogoutFunction) => JSX.Element;\ntype LoginFunction = () => void;\ntype LogoutFunction = () => void;\n\nexport interface IAzureADFunctionProps {\n  login: LoginFunction;\n  logout: LogoutFunction;\n  authenticationState: AuthenticationState;\n  accountInfo: IAccountInfo | null;\n  error: AuthError | null;\n}\n\nexport interface IAzureADProps {\n  provider: MsalAuthProvider;\n  unauthenticatedFunction?: UnauthenticatedFunction;\n  authenticatedFunction?: AuthenticatedFunction;\n  accountInfoCallback?: AccountInfoCallback;\n  reduxStore?: Store;\n  forceLogin?: boolean;\n}\n\nexport const AzureAD: React.FunctionComponent<IAzureADProps> = props => {\n  const { authenticatedFunction, unauthenticatedFunction, provider, forceLogin, accountInfoCallback } = props;\n  const [accountInfo, _setAccountInfo] = useState(provider.getAccountInfo());\n  const [authenticationState, _setAuthenticationState] = useState(provider.authenticationState);\n  const [error, _setError] = useState(provider.getError());\n\n  // On component mounted\n  useEffect(() => {\n    provider.registerAuthenticationStateHandler(setAuthenticationState);\n    provider.registerAcountInfoHandler(onAccountInfoChanged);\n    provider.registerErrorHandler(setError);\n\n    if (props.reduxStore) {\n      provider.registerReduxStore(props.reduxStore);\n    }\n\n    if (forceLogin && authenticationState === AuthenticationState.Unauthenticated && !error) {\n      login();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      provider.unregisterAuthenticationStateHandler(setAuthenticationState);\n      provider.unregisterAccountInfoHandler(onAccountInfoChanged);\n      provider.unregisterErrorHandler(setError);\n    };\n  }, [authenticationState, accountInfo, error]);\n\n  const login = useCallback(() => {\n    provider.login();\n  }, [provider]);\n\n  const logout = useCallback(() => {\n    if (authenticationState !== AuthenticationState.Authenticated) {\n      return;\n    }\n    provider.logout();\n  }, [authenticationState, provider]);\n\n  const setAuthenticationState = useCallback(\n    (newState: AuthenticationState) => {\n      if (newState !== authenticationState) {\n        _setAuthenticationState(newState);\n\n        if (newState === AuthenticationState.Unauthenticated && forceLogin && !error) {\n          login();\n        }\n      }\n    },\n    [authenticationState, forceLogin, error],\n  );\n\n  const setError = useCallback(\n    (newError: AuthError) => {\n      if (newError !== error) {\n        _setError(newError);\n      }\n    },\n    [error],\n  );\n\n  const onAccountInfoChanged = useCallback(\n    (newAccountInfo: IAccountInfo) => {\n      _setAccountInfo(newAccountInfo);\n\n      if (accountInfoCallback) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The accountInfoCallback callback has been deprecated and will be removed in a future release.',\n        );\n        accountInfoCallback(newAccountInfo);\n      }\n    },\n    [accountInfoCallback],\n  );\n\n  // The authentication data to be passed to the children() if it's a function\n  const childrenFunctionProps = useMemo<IAzureADFunctionProps>(\n    () => ({\n      accountInfo,\n      authenticationState,\n      error,\n      login,\n      logout,\n    }),\n    [accountInfo, authenticationState, error, login, logout],\n  );\n\n  /**\n   * @param children\n   * @param childrenProps\n   */\n  function getChildrenOrFunction(children: any, childrenProps: IAzureADFunctionProps) {\n    if (children) {\n      // tslint:disable-next-line: triple-equals\n      if (isChildrenFunction(children)) {\n        return (children as (props: IAzureADFunctionProps) => {})(childrenProps);\n      } else {\n        return children;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param children\n   */\n  function isChildrenFunction(children: any) {\n    return typeof children == 'function' || false;\n  }\n\n  // Render logic\n  switch (authenticationState) {\n    case AuthenticationState.Authenticated:\n      if (authenticatedFunction) {\n        const authFunctionResult = authenticatedFunction(logout);\n\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The authenticatedFunction callback has been deprecated and will be removed in a future release.',\n        );\n\n        if (authFunctionResult) {\n          return authFunctionResult;\n        }\n      }\n\n      // If there is no authenticatedFunction, or it returned null, render the children\n      return getChildrenOrFunction(props.children, childrenFunctionProps);\n    case AuthenticationState.Unauthenticated:\n      if (unauthenticatedFunction) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The unauthenticatedFunction callback has been deprecated and will be removed in a future release.',\n        );\n        return unauthenticatedFunction(login) || null;\n      }\n\n    // If state is Uauthenticated or InProgress, only return the children if it's a function\n    // If the children prop is a function, we will pass state changes to be handled by the consumer\n    // eslint-disable-next-line no-fallthrough\n    case AuthenticationState.InProgress:\n      if (isChildrenFunction(props.children)) {\n        return getChildrenOrFunction(props.children, childrenFunctionProps);\n      }\n      return null;\n    default:\n      return null;\n  }\n};\n\nAzureAD.displayName = 'AzureAD';\n"]},"metadata":{},"sourceType":"script"}