{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/vikramsah/Documents/BCC Data Entry Portal/UI/src/components/useForm.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from \"@material-ui/core\";\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  _s();\n\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    if (name === \"phone1\") {\n      const onlyNums = e.target.value.replace(/[^0-9]/g, '');\n\n      if (onlyNums.length < 10) {\n        setValues({ ...values,\n          [name]: onlyNums\n        });\n      }\n    } else {\n      setValues({ ...values,\n        [name]: value\n      });\n    }\n\n    console.log(values);\n    if (validateOnChange) validate({\n      [name]: value\n    });\n  };\n\n  const resetForm = () => {\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  };\n}\n\n_s(useForm, \"eRFbKdGQbiaa9HoEdb7CtqsAoqM=\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function Form(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    ...other,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/vikramsah/Documents/BCC Data Entry Portal/UI/src/components/useForm.js"],"names":["React","useState","makeStyles","useForm","initialFValues","validateOnChange","validate","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","onlyNums","replace","length","console","log","resetForm","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAO,SAASC,OAAT,CAAiBC,cAAjB,EAAiCC,gBAAgB,GAAG,KAApD,EAA2DC,QAA3D,EAAqE;AAAA;;AAGxE,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACG,cAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,iBAAiB,GAAGC,CAAC,IAAI;AAC3B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;;AACA,QAAIF,IAAI,KAAK,QAAb,EAAsB;AAClB,YAAMG,QAAQ,GAAGJ,CAAC,CAACG,MAAF,CAASD,KAAT,CAAeG,OAAf,CAAuB,SAAvB,EAAkC,EAAlC,CAAjB;;AACA,UAAID,QAAQ,CAACE,MAAT,GAAkB,EAAtB,EAA0B;AACtBV,QAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,WAACM,IAAD,GAAQG;AAFF,SAAD,CAAT;AAIH;AACJ,KARD,MASI;AAEJR,MAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,SAACM,IAAD,GAAQC;AAFF,OAAD,CAAT;AAIH;;AACGK,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACA,QAAIF,gBAAJ,EACIC,QAAQ,CAAC;AAAE,OAACO,IAAD,GAAQC;AAAV,KAAD,CAAR;AACP,GArBD;;AAuBA,QAAMO,SAAS,GAAG,MAAM;AACpBb,IAAAA,SAAS,CAACJ,cAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAHD;;AAMA,SAAO;AACHH,IAAAA,MADG;AAEHC,IAAAA,SAFG;AAGHC,IAAAA,MAHG;AAIHC,IAAAA,SAJG;AAKHC,IAAAA,iBALG;AAMHU,IAAAA;AANG,GAAP;AASH;;GA5CelB,O;;AA+ChB,MAAMmB,SAAS,GAAGpB,UAAU,CAACqB,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACF,8BAA0B;AACtBC,MAAAA,KAAK,EAAE,KADe;AAEtBC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFc;AADxB;AAD6B,CAAL,CAAN,CAA5B;AASA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAExB,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACI;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACN,IAAzB;AAA+B,IAAA,YAAY,EAAC,KAA5C;AAAA,OAAsDQ,KAAtD;AAAA,cACKH,KAAK,CAACE;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;IATeH,I;UAEIN,S;;;KAFJM,I","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        if (name === \"phone1\"){\n            const onlyNums = e.target.value.replace(/[^0-9]/g, '');\n            if (onlyNums.length < 10) {\n                setValues({\n                    ...values,\n                    [name]: onlyNums\n                });\n            }\n        }\n        else{\n\n        setValues({\n            ...values,\n            [name]: value\n        });\n    }\n        console.log(values);\n        if (validateOnChange)\n            validate({ [name]: value })\n    }\n\n    const resetForm = () => {\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n\n    }\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& .MuiFormControl-root': {\n            width: '80%',\n            margin: theme.spacing(1)\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props;\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}