{"version":3,"sources":["webpack://react-aad-msal/webpack/universalModuleDefinition","webpack://react-aad-msal/webpack/bootstrap","webpack://react-aad-msal/external \"react\"","webpack://react-aad-msal/external \"msal\"","webpack://react-aad-msal/./src/interfaces/index.ts","webpack://react-aad-msal/./src/enums/AuthenticationActions.ts","webpack://react-aad-msal/./src/enums/AuthenticationState.ts","webpack://react-aad-msal/./src/enums/LoginType.ts","webpack://react-aad-msal/./src/enums/TokenType.ts","webpack://react-aad-msal/./src/AccessTokenResponse.ts","webpack://react-aad-msal/./src/IdTokenResponse.ts","webpack://react-aad-msal/./src/AuthenticationActionCreators.ts","webpack://react-aad-msal/./src/Logger.ts","webpack://react-aad-msal/./src/MsalAuthProvider.ts","webpack://react-aad-msal/./src/components/AzureAD.tsx","webpack://react-aad-msal/./src/components/withAuthentication.tsx","webpack://react-aad-msal/./src/index.ts"],"names":["AuthenticationActions","AuthenticationState","LoginType","TokenType","AccessTokenResponse","response","tokenType","AccessToken","Error","accessToken","expiresOn","scopes","state","accountState","IdTokenResponse","IdToken","idToken","AuthenticationActionCreators","type","Initializing","Initialized","data","payload","LoginSuccess","LoginFailed","error","LoginError","ClearError","LogoutSuccess","token","AcquiredIdTokenSuccess","AcquiredIdTokenError","AcquiredAccessTokenSuccess","AcquiredAccessTokenError","AuthenticatedStateChanged","Logger","message","optionalParams","console","log","concat","info","warn","MsalAuthProvider","config","parameters","options","loginType","Popup","tokenRefreshUri","window","location","origin","Set","params","getAuthenticationParameters","getError","errorCode","setError","providerOptions","getProviderOptions","Redirect","setAuthenticationState","InProgress","loginRedirect","ERROR","Unauthenticated","loginPopup","processLogin","dispatchAction","logoutSuccessful","_accountInfo","refreshParams","redirectUri","extraQueryParameters","domain_hint","acquireTokenSilent","handleAcquireTokenSuccess","Authenticated","loginParams","acquireAccessTokenError","loginToRefreshToken","getCurrentConfiguration","clientId","auth","account","getAccount","loginHint","userName","acquireIdTokenError","_parameters","_error","_options","handleRedirectCallback","authenticationRedirectCallback","store","_reduxStore","_actionQueue","length","action","shift","listener","_onAuthenticationStateHandlers","add","authenticationState","_onAccountInfoHandlers","_onErrorHandlers","loginError","forEach","InteractionRequiredAuthError","acquireTokenRedirect","Promise","resolve","acquireTokenPopup","initializing","initialized","handleLoginFailed","getIdToken","handleLoginSuccess","ClientAuthError","getLoginInProgress","authenticatedStateChanged","accountInfo","getAccountInfo","jwtIdToken","rawIdToken","jwtAccessToken","dispatch","push","setAccountInfo","acquireIdTokenSuccess","acquireAccessTokenSuccess","loginFailed","loginSuccessful","UserAgentApplication","setAuthenticationParameters","setProviderOptions","initializeProvider","AzureAD","props","authenticatedFunction","unauthenticatedFunction","provider","forceLogin","accountInfoCallback","useState","_setAccountInfo","_setAuthenticationState","_setError","useEffect","registerAuthenticationStateHandler","registerAcountInfoHandler","onAccountInfoChanged","registerErrorHandler","reduxStore","registerReduxStore","login","unregisterAuthenticationStateHandler","unregisterAccountInfoHandler","unregisterErrorHandler","useCallback","logout","newState","newError","newAccountInfo","childrenFunctionProps","useMemo","getChildrenOrFunction","children","childrenProps","isChildrenFunction","authFunctionResult","displayName","withAuthentication","WrappedComponent","propParams","name"],"mappings":"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","file":"react-aad-msal.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"msal\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"react-aad-msal\", [\"react\", \"msal\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"react-aad-msal\"] = factory(require(\"react\"), require(\"msal\"));\n\telse\n\t\troot[\"react-aad-msal\"] = factory(root[\"react\"], root[\"msal\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","export * from './IAccountInfo';\nexport * from './IAuthProvider';\nexport * from './IMsalAuthProviderConfig';\n","export enum AuthenticationActions {\n  Initializing = 'AAD_INITIALIZING',\n  Initialized = 'AAD_INITIALIZED',\n  LoginSuccess = 'AAD_LOGIN_SUCCESS',\n  LoginFailed = 'AAD_LOGIN_FAILED',\n  LoginError = 'AAD_LOGIN_ERROR',\n  ClearError = 'AAD_CLEAR_ERROR',\n  LogoutSuccess = 'AAD_LOGOUT_SUCCESS',\n  AcquiredIdTokenSuccess = 'AAD_ACQUIRED_ID_TOKEN_SUCCESS',\n  AcquiredIdTokenError = 'AAD_ACQUIRED_ID_TOKEN_ERROR',\n  AcquiredAccessTokenSuccess = 'AAD_ACQUIRED_ACCESS_TOKEN_SUCCESS',\n  AcquiredAccessTokenError = 'AAD_ACQUIRED_ACCESS_TOKEN_ERROR',\n  AuthenticatedStateChanged = 'AAD_AUTHENTICATED_STATE_CHANGED',\n}\n","export enum AuthenticationState {\n  Unauthenticated = 'Unauthenticated',\n  InProgress = 'InProgress',\n  Authenticated = 'Authenticated',\n}\n","export enum LoginType {\n  Popup,\n  Redirect,\n}\n","export enum TokenType {\n  IdToken = 'id_token',\n  AccessToken = 'access_token',\n}\n","import { AuthResponse } from 'msal';\n\nimport { TokenType } from './enums';\n\nexport class AccessTokenResponse {\n  public accessToken = '';\n  public scopes: string[] = [];\n  public expiresOn: Date;\n  public state = '';\n\n  constructor(response: AuthResponse) {\n    if (response.tokenType !== TokenType.AccessToken) {\n      throw new Error(\n        `Can't construct an AccessTokenResponse from a AuthResponse that has a token type of \"${response.tokenType}\".`,\n      );\n    }\n\n    this.accessToken = response.accessToken;\n    this.expiresOn = response.expiresOn;\n    this.scopes = response.scopes;\n    this.state = response.accountState;\n  }\n}\n","import { AuthResponse } from 'msal';\nimport { IdToken } from 'msal/lib-commonjs/IdToken';\n\nimport { TokenType } from './enums';\n\nexport class IdTokenResponse {\n  public idToken: IdToken;\n  public state = '';\n\n  constructor(response: AuthResponse) {\n    if (response.tokenType !== TokenType.IdToken) {\n      throw new Error(\n        `Can't construct an IdTokenResponse from a AuthResponse that has a token type of \"${response.tokenType}\".`,\n      );\n    }\n\n    this.idToken = response.idToken;\n    this.state = response.accountState;\n  }\n}\n","import { AuthError } from 'msal';\nimport { AnyAction } from 'redux';\nimport { AccessTokenResponse } from './AccessTokenResponse';\nimport { IdTokenResponse } from './IdTokenResponse';\nimport { IAccountInfo } from './interfaces';\nimport { AuthenticationActions, AuthenticationState } from './enums';\n\nexport abstract class AuthenticationActionCreators {\n  public static initializing = (): AnyAction => ({\n    type: AuthenticationActions.Initializing,\n  });\n\n  public static initialized = (): AnyAction => ({\n    type: AuthenticationActions.Initialized,\n  });\n\n  public static loginSuccessful = (data: IAccountInfo): AnyAction => ({\n    payload: data,\n    type: AuthenticationActions.LoginSuccess,\n  });\n\n  public static loginFailed = (): AnyAction => ({\n    type: AuthenticationActions.LoginFailed,\n  });\n\n  public static loginError = (error: AuthError): AnyAction => ({\n    payload: error,\n    type: AuthenticationActions.LoginError,\n  });\n\n  public static clearError = (): AnyAction => ({\n    type: AuthenticationActions.ClearError,\n  });\n\n  public static logoutSuccessful = (): AnyAction => ({\n    type: AuthenticationActions.LogoutSuccess,\n  });\n\n  public static acquireIdTokenSuccess = (token: IdTokenResponse): AnyAction => ({\n    payload: token,\n    type: AuthenticationActions.AcquiredIdTokenSuccess,\n  });\n\n  public static acquireIdTokenError = (error: AuthError): AnyAction => ({\n    payload: error,\n    type: AuthenticationActions.AcquiredIdTokenError,\n  });\n\n  public static acquireAccessTokenSuccess = (token: AccessTokenResponse): AnyAction => ({\n    payload: token,\n    type: AuthenticationActions.AcquiredAccessTokenSuccess,\n  });\n\n  public static acquireAccessTokenError = (error: AuthError): AnyAction => ({\n    payload: error,\n    type: AuthenticationActions.AcquiredAccessTokenError,\n  });\n\n  public static authenticatedStateChanged = (state: AuthenticationState): AnyAction => ({\n    payload: state,\n    type: AuthenticationActions.AuthenticatedStateChanged,\n  });\n}\n","export class Logger {\n  public static VERBOSE(message: string, ...optionalParams: any[]) {\n    // eslint-disable-next-line no-console\n    console.log(...['[VERBOSE] ' + message].concat(optionalParams));\n  }\n\n  public static INFO(message: string, ...optionalParams: any[]) {\n    // eslint-disable-next-line no-console\n    console.info(...['[INFO] ' + message].concat(optionalParams));\n  }\n\n  public static WARN(message: string, ...optionalParams: any[]) {\n    // eslint-disable-next-line no-console\n    console.warn(...['[WARN] ' + message].concat(optionalParams));\n  }\n\n  public static ERROR(message: string, ...optionalParams: any[]) {\n    // eslint-disable-next-line no-console\n    console.error(...['[ERROR] ' + message].concat(optionalParams));\n  }\n}\n","import {\n  AuthenticationParameters,\n  AuthError,\n  AuthResponse,\n  ClientAuthError,\n  Configuration,\n  InteractionRequiredAuthError,\n  UserAgentApplication,\n} from 'msal';\nimport { AnyAction, Store } from 'redux';\n\nimport { AccessTokenResponse } from './AccessTokenResponse';\nimport { AuthenticationActionCreators } from './AuthenticationActionCreators';\nimport { IdTokenResponse } from './IdTokenResponse';\nimport { IAccountInfo, IAuthProvider, IMsalAuthProviderConfig } from './interfaces';\nimport { Logger } from './Logger';\nimport { AuthenticationState, LoginType, TokenType } from './enums';\n\ntype AuthenticationStateHandler = (state: AuthenticationState) => void;\ntype ErrorHandler = (error: AuthError | null) => void;\ntype AccountInfoHandlers = (accountInfo: IAccountInfo | null) => void;\n\nexport class MsalAuthProvider extends UserAgentApplication implements IAuthProvider {\n  public authenticationState: AuthenticationState;\n\n  /**\n   * Gives access to the MSAL functionality for advanced usage.\n   *\n   * @deprecated The MsalAuthProvider class itself extends from UserAgentApplication and has the same functionality\n   */\n  public UserAgentApplication: UserAgentApplication;\n\n  protected _reduxStore: Store;\n  protected _parameters: AuthenticationParameters;\n  protected _options: IMsalAuthProviderConfig;\n  protected _accountInfo: IAccountInfo | null;\n  protected _error: AuthError | null;\n\n  private _onAuthenticationStateHandlers = new Set<AuthenticationStateHandler>();\n  private _onAccountInfoHandlers = new Set<AccountInfoHandlers>();\n  private _onErrorHandlers = new Set<ErrorHandler>();\n  private _actionQueue: AnyAction[] = [];\n\n  constructor(\n    config: Configuration,\n    parameters: AuthenticationParameters,\n    options: IMsalAuthProviderConfig = {\n      loginType: LoginType.Popup,\n      tokenRefreshUri: window.location.origin,\n    },\n  ) {\n    super(config);\n\n    // Required only for backward compatibility\n    this.UserAgentApplication = this as UserAgentApplication;\n\n    this.setAuthenticationParameters(parameters);\n    this.setProviderOptions(options);\n\n    this.initializeProvider();\n  }\n\n  public login = async (parameters?: AuthenticationParameters) => {\n    const params = parameters || this.getAuthenticationParameters();\n\n    // Clear any active authentication errors unless the code is executing from within\n    // the token renewal iframe\n    const error = this.getError();\n    if (error && error.errorCode !== 'block_token_requests') {\n      this.setError(null);\n    }\n\n    const providerOptions = this.getProviderOptions();\n    if (providerOptions.loginType === LoginType.Redirect) {\n      this.setAuthenticationState(AuthenticationState.InProgress);\n      try {\n        this.loginRedirect(params);\n      } catch (error) {\n        Logger.ERROR(error);\n\n        this.setError(error);\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n      }\n    } else if (providerOptions.loginType === LoginType.Popup) {\n      try {\n        this.setAuthenticationState(AuthenticationState.InProgress);\n        await this.loginPopup(params);\n      } catch (error) {\n        Logger.ERROR(error);\n\n        this.setError(error);\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n      }\n\n      await this.processLogin();\n    }\n  };\n\n  public logout = (): void => {\n    super.logout();\n\n    this.dispatchAction(AuthenticationActionCreators.logoutSuccessful());\n  };\n\n  public getAccountInfo = (): IAccountInfo | null => {\n    return this._accountInfo ? { ...this._accountInfo } : null;\n  };\n\n  public getAccessToken = async (parameters?: AuthenticationParameters): Promise<AccessTokenResponse> => {\n    const providerOptions = this.getProviderOptions();\n\n    // The parameters to be used when silently refreshing the token\n    const refreshParams = {\n      ...(parameters || this.getAuthenticationParameters()),\n      // Use the redirectUri that was passed, otherwise use the configured tokenRefreshUri\n      redirectUri: (parameters && parameters.redirectUri) || providerOptions.tokenRefreshUri,\n    };\n\n    /* In this library, acquireTokenSilent is being called only when there is an accountInfo of an expired session.\n        *  In a scenario where user interaction is required, username from the account info is passed as 'login_hint'\n        *  parameter which redirects user to user's organization login page. So 'domain_hint' is not required to be\n        *  passed for silent calls. Hence, the below code is to avoid sending domain_hint. This also solves the issue\n        *  of multiple domain_hint param being added by the MSAL.js.\n    */\n    if (refreshParams.extraQueryParameters && refreshParams.extraQueryParameters.domain_hint) {\n      delete refreshParams.extraQueryParameters.domain_hint;\n    }\n\n    try {\n      const response = await this.acquireTokenSilent(refreshParams);\n\n      this.handleAcquireTokenSuccess(response);\n      this.setAuthenticationState(AuthenticationState.Authenticated);\n\n      return new AccessTokenResponse(response);\n    } catch (error) {\n      // The parameters to be used if silent refresh failed, and a new login needs to be initiated\n      const loginParams = {\n        ...(parameters || this.getAuthenticationParameters()),\n      };\n\n      this.dispatchAction(AuthenticationActionCreators.acquireAccessTokenError(error));\n      const response = await this.loginToRefreshToken(error, loginParams);\n\n      return new AccessTokenResponse(response);\n    }\n  };\n\n  public getIdToken = async (parameters?: AuthenticationParameters): Promise<IdTokenResponse> => {\n    const providerOptions = this.getProviderOptions();\n    const config = this.getCurrentConfiguration();\n    const clientId = config.auth.clientId;\n\n    // The parameters to be used when silently refreshing the token\n    const refreshParams = {\n      ...(parameters || this.getAuthenticationParameters()),\n      // Use the redirectUri that was passed, otherwise use the configured tokenRefreshUri\n      redirectUri: (parameters && parameters.redirectUri) || providerOptions.tokenRefreshUri,\n      // Pass the clientId as the only scope to get a renewed IdToken if it has expired\n      scopes: [clientId],\n    };\n\n    /* In this library, acquireTokenSilent is being called only when there is an accountInfo of an expired session.\n        *  In a scenario where user interaction is required, username from the account info is passed as 'login_hint'\n        *  parameter which redirects user to user's organization login page. So 'domain_hint' is not required to be\n        *  passed for silent calls. Hence, the below code is to avoid sending domain_hint. This also solves the issue\n        *  of multiple domain_hint param being added by the MSAL.js.\n    */\n    if (refreshParams.extraQueryParameters && refreshParams.extraQueryParameters.domain_hint) {\n      delete refreshParams.extraQueryParameters.domain_hint;\n    }\n\n    try {\n      const response = await this.acquireTokenSilent(refreshParams);\n\n      this.handleAcquireTokenSuccess(response);\n      this.setAuthenticationState(AuthenticationState.Authenticated);\n\n      return new IdTokenResponse(response);\n    } catch (error) {\n      // The parameters to be used if silent refresh failed, and a new login needs to be initiated\n      const loginParams = {\n        ...(parameters || this.getAuthenticationParameters()),\n      };\n\n      // If the parameters do not specify a login hint and the user already has a session cached,\n      // prefer the cached user name to bypass the account selection process if possible\n      const account = this.getAccount();\n      if (account && (!parameters || !parameters.loginHint)) {\n        loginParams.loginHint = account.userName;\n      }\n\n      this.dispatchAction(AuthenticationActionCreators.acquireIdTokenError(error));\n      const response = await this.loginToRefreshToken(error, loginParams);\n\n      return new IdTokenResponse(response);\n    }\n  };\n\n  public getAuthenticationParameters = (): AuthenticationParameters => {\n    return { ...this._parameters };\n  };\n\n  public getError = () => {\n    return this._error ? { ...this._error } : null;\n  };\n\n  public setAuthenticationParameters = (parameters: AuthenticationParameters): void => {\n    this._parameters = { ...parameters };\n  };\n\n  public getProviderOptions = (): IMsalAuthProviderConfig => {\n    return { ...this._options };\n  };\n\n  public setProviderOptions = (options: IMsalAuthProviderConfig) => {\n    this._options = { ...options };\n    if (options.loginType === LoginType.Redirect) {\n      this.handleRedirectCallback(this.authenticationRedirectCallback);\n    }\n  };\n\n  public registerReduxStore = (store: Store): void => {\n    this._reduxStore = store;\n    while (this._actionQueue.length) {\n      const action = this._actionQueue.shift();\n      if (action) {\n        this.dispatchAction(action);\n      }\n    }\n  };\n\n  public registerAuthenticationStateHandler = (listener: AuthenticationStateHandler) => {\n    this._onAuthenticationStateHandlers.add(listener);\n    listener(this.authenticationState);\n  };\n\n  public unregisterAuthenticationStateHandler = (listener: AuthenticationStateHandler) => {\n    this._onAuthenticationStateHandlers.delete(listener);\n  };\n\n  public registerAcountInfoHandler = (listener: AccountInfoHandlers) => {\n    this._onAccountInfoHandlers.add(listener);\n    listener(this._accountInfo);\n  };\n\n  public unregisterAccountInfoHandler = (listener: AccountInfoHandlers) => {\n    this._onAccountInfoHandlers.delete(listener);\n  };\n\n  public registerErrorHandler = (listener: ErrorHandler) => {\n    this._onErrorHandlers.add(listener);\n    listener(this._error);\n  };\n\n  public unregisterErrorHandler = (listener: ErrorHandler) => {\n    this._onErrorHandlers.delete(listener);\n  };\n\n  private setError = (error: AuthError | null) => {\n    this._error = error ? { ...error } : null;\n\n    if (error) {\n      this.dispatchAction(AuthenticationActionCreators.loginError(error));\n    }\n\n    this._onErrorHandlers.forEach(listener => listener(this._error));\n\n    return { ...this._error };\n  };\n\n  private loginToRefreshToken = async (\n    error: AuthError,\n    parameters?: AuthenticationParameters,\n  ): Promise<AuthResponse> => {\n    const providerOptions = this.getProviderOptions();\n    const params = parameters || this.getAuthenticationParameters();\n\n    if (error instanceof InteractionRequiredAuthError) {\n      if (providerOptions.loginType === LoginType.Redirect) {\n        this.acquireTokenRedirect(params);\n\n        // Nothing to return, the user is redirected to the login page\n        return new Promise<AuthResponse>(resolve => resolve());\n      }\n\n      try {\n        const response = await this.acquireTokenPopup(params);\n        this.handleAcquireTokenSuccess(response);\n        this.setAuthenticationState(AuthenticationState.Authenticated);\n        return response;\n      } catch (error) {\n        Logger.ERROR(error);\n\n        this.setError(error);\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n\n        throw error;\n      }\n    } else {\n      Logger.ERROR(error as any);\n\n      this.setError(error);\n      this.setAuthenticationState(AuthenticationState.Unauthenticated);\n\n      throw error;\n    }\n  };\n\n  private authenticationRedirectCallback = (error: AuthError) => {\n    if (error) {\n      this.setError(error);\n    }\n    this.processLogin();\n  };\n\n  private initializeProvider = async () => {\n    this.dispatchAction(AuthenticationActionCreators.initializing());\n\n    await this.processLogin();\n\n    this.dispatchAction(AuthenticationActionCreators.initialized());\n  };\n\n  private processLogin = async () => {\n    if (this.getError()) {\n      this.handleLoginFailed();\n\n      this.setAuthenticationState(AuthenticationState.Unauthenticated);\n    } else if (this.getAccount()) {\n      try {\n        // If the IdToken has expired, refresh it. Otherwise use the cached token\n        await this.getIdToken();\n\n        this.handleLoginSuccess();\n      } catch (error) {\n        // Swallow the error if the user isn't authenticated, just set to Unauthenticated\n        if (!(error instanceof ClientAuthError && error.errorCode === 'user_login_error')) {\n          Logger.ERROR(error);\n          this.setError(error);\n        }\n\n        this.setAuthenticationState(AuthenticationState.Unauthenticated);\n      }\n    } else if (this.getLoginInProgress()) {\n      this.setAuthenticationState(AuthenticationState.InProgress);\n    } else {\n      this.setAuthenticationState(AuthenticationState.Unauthenticated);\n    }\n  };\n\n  private setAuthenticationState = (state: AuthenticationState): AuthenticationState => {\n    if (this.authenticationState !== state) {\n      this.authenticationState = state;\n\n      this.dispatchAction(AuthenticationActionCreators.authenticatedStateChanged(state));\n      this._onAuthenticationStateHandlers.forEach(listener => listener(state));\n    }\n\n    return this.authenticationState;\n  };\n\n  private setAccountInfo = (response: AuthResponse): IAccountInfo => {\n    const accountInfo: IAccountInfo = this.getAccountInfo() || ({ account: response.account } as IAccountInfo);\n\n    // Depending on the token type of the auth response, update the correct property\n    if (response.tokenType === TokenType.IdToken) {\n      accountInfo.jwtIdToken = response.idToken.rawIdToken;\n    } else if (response.tokenType === TokenType.AccessToken) {\n      accountInfo.jwtAccessToken = response.accessToken;\n    }\n\n    this._accountInfo = { ...accountInfo };\n    this._onAccountInfoHandlers.forEach(listener => listener(this._accountInfo));\n\n    return { ...this._accountInfo };\n  };\n\n  private dispatchAction = (action: AnyAction): void => {\n    if (this._reduxStore) {\n      this._reduxStore.dispatch(action);\n    } else {\n      this._actionQueue.push(action);\n    }\n  };\n\n  private handleAcquireTokenSuccess = (response: AuthResponse): void => {\n    this.setAccountInfo(response);\n\n    if (response.tokenType === TokenType.IdToken) {\n      const token = new IdTokenResponse(response);\n      this.dispatchAction(AuthenticationActionCreators.acquireIdTokenSuccess(token));\n    } else if (response.tokenType === TokenType.AccessToken) {\n      const token = new AccessTokenResponse(response);\n      this.dispatchAction(AuthenticationActionCreators.acquireAccessTokenSuccess(token));\n    }\n  };\n\n  private handleLoginFailed = (): void => {\n    const error = this.getError();\n    if (error) {\n      this.dispatchAction(AuthenticationActionCreators.loginFailed());\n    }\n  };\n\n  private handleLoginSuccess = (): void => {\n    const account = this.getAccountInfo();\n    if (account) {\n      this.dispatchAction(AuthenticationActionCreators.loginSuccessful(account));\n    }\n  };\n}\n","import { default as React, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Store } from 'redux';\n\nimport { AuthError } from 'msal';\nimport { MsalAuthProvider } from '..';\nimport { IAccountInfo } from '../interfaces';\nimport { AuthenticationState } from '../enums';\n\ntype AccountInfoCallback = (token: IAccountInfo) => void;\ntype UnauthenticatedFunction = (login: LoginFunction) => JSX.Element;\ntype AuthenticatedFunction = (logout: LogoutFunction) => JSX.Element;\ntype LoginFunction = () => void;\ntype LogoutFunction = () => void;\n\nexport interface IAzureADFunctionProps {\n  login: LoginFunction;\n  logout: LogoutFunction;\n  authenticationState: AuthenticationState;\n  accountInfo: IAccountInfo | null;\n  error: AuthError | null;\n}\n\nexport interface IAzureADProps {\n  provider: MsalAuthProvider;\n  unauthenticatedFunction?: UnauthenticatedFunction;\n  authenticatedFunction?: AuthenticatedFunction;\n  accountInfoCallback?: AccountInfoCallback;\n  reduxStore?: Store;\n  forceLogin?: boolean;\n}\n\nexport const AzureAD: React.FunctionComponent<IAzureADProps> = props => {\n  const { authenticatedFunction, unauthenticatedFunction, provider, forceLogin, accountInfoCallback } = props;\n  const [accountInfo, _setAccountInfo] = useState(provider.getAccountInfo());\n  const [authenticationState, _setAuthenticationState] = useState(provider.authenticationState);\n  const [error, _setError] = useState(provider.getError());\n\n  // On component mounted\n  useEffect(() => {\n    provider.registerAuthenticationStateHandler(setAuthenticationState);\n    provider.registerAcountInfoHandler(onAccountInfoChanged);\n    provider.registerErrorHandler(setError);\n\n    if (props.reduxStore) {\n      provider.registerReduxStore(props.reduxStore);\n    }\n\n    if (forceLogin && authenticationState === AuthenticationState.Unauthenticated && !error) {\n      login();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      provider.unregisterAuthenticationStateHandler(setAuthenticationState);\n      provider.unregisterAccountInfoHandler(onAccountInfoChanged);\n      provider.unregisterErrorHandler(setError);\n    };\n  }, [authenticationState, accountInfo, error]);\n\n  const login = useCallback(() => {\n    provider.login();\n  }, [provider]);\n\n  const logout = useCallback(() => {\n    if (authenticationState !== AuthenticationState.Authenticated) {\n      return;\n    }\n    provider.logout();\n  }, [authenticationState, provider]);\n\n  const setAuthenticationState = useCallback(\n    (newState: AuthenticationState) => {\n      if (newState !== authenticationState) {\n        _setAuthenticationState(newState);\n\n        if (newState === AuthenticationState.Unauthenticated && forceLogin && !error) {\n          login();\n        }\n      }\n    },\n    [authenticationState, forceLogin, error],\n  );\n\n  const setError = useCallback(\n    (newError: AuthError) => {\n      if (newError !== error) {\n        _setError(newError);\n      }\n    },\n    [error],\n  );\n\n  const onAccountInfoChanged = useCallback(\n    (newAccountInfo: IAccountInfo) => {\n      _setAccountInfo(newAccountInfo);\n\n      if (accountInfoCallback) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The accountInfoCallback callback has been deprecated and will be removed in a future release.',\n        );\n        accountInfoCallback(newAccountInfo);\n      }\n    },\n    [accountInfoCallback],\n  );\n\n  // The authentication data to be passed to the children() if it's a function\n  const childrenFunctionProps = useMemo<IAzureADFunctionProps>(\n    () => ({\n      accountInfo,\n      authenticationState,\n      error,\n      login,\n      logout,\n    }),\n    [accountInfo, authenticationState, error, login, logout],\n  );\n\n  /**\n   * @param children\n   * @param childrenProps\n   */\n  function getChildrenOrFunction(children: any, childrenProps: IAzureADFunctionProps) {\n    if (children) {\n      // tslint:disable-next-line: triple-equals\n      if (isChildrenFunction(children)) {\n        return (children as (props: IAzureADFunctionProps) => {})(childrenProps);\n      } else {\n        return children;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param children\n   */\n  function isChildrenFunction(children: any) {\n    return typeof children == 'function' || false;\n  }\n\n  // Render logic\n  switch (authenticationState) {\n    case AuthenticationState.Authenticated:\n      if (authenticatedFunction) {\n        const authFunctionResult = authenticatedFunction(logout);\n\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The authenticatedFunction callback has been deprecated and will be removed in a future release.',\n        );\n\n        if (authFunctionResult) {\n          return authFunctionResult;\n        }\n      }\n\n      // If there is no authenticatedFunction, or it returned null, render the children\n      return getChildrenOrFunction(props.children, childrenFunctionProps);\n    case AuthenticationState.Unauthenticated:\n      if (unauthenticatedFunction) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The unauthenticatedFunction callback has been deprecated and will be removed in a future release.',\n        );\n        return unauthenticatedFunction(login) || null;\n      }\n\n    // If state is Uauthenticated or InProgress, only return the children if it's a function\n    // If the children prop is a function, we will pass state changes to be handled by the consumer\n    // eslint-disable-next-line no-fallthrough\n    case AuthenticationState.InProgress:\n      if (isChildrenFunction(props.children)) {\n        return getChildrenOrFunction(props.children, childrenFunctionProps);\n      }\n      return null;\n    default:\n      return null;\n  }\n};\n\nAzureAD.displayName = 'AzureAD';\n","import * as React from 'react';\n\nimport { AzureAD, IAzureADProps } from './AzureAD';\n\nexport const withAuthentication = <P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  parameters: IAzureADProps,\n): React.FunctionComponent<P> => {\n  // tslint:disable-next-line: no-shadowed-variable\n  const withAuthentication: React.FunctionComponent = (props: any) => {\n    const propParams: IAzureADProps = { forceLogin: true, ...parameters };\n\n    withAuthentication.displayName = `withAuthentication(${WrappedComponent.displayName || WrappedComponent.name}`;\n    return (\n      <AzureAD {...propParams}>\n        <WrappedComponent {...props} />\n      </AzureAD>\n    );\n  };\n\n  return withAuthentication;\n};\n","export { IAccountInfo, IMsalAuthProviderConfig } from './interfaces';\nexport { AuthenticationActions, AuthenticationState, LoginType } from './enums';\n\nexport { AccessTokenResponse } from './AccessTokenResponse';\nexport { IdTokenResponse } from './IdTokenResponse';\nexport { MsalAuthProvider } from './MsalAuthProvider';\nexport { AuthenticationActionCreators } from './AuthenticationActionCreators';\n\nimport { AzureAD } from './components/AzureAD';\nexport * from './components/AzureAD';\nexport { withAuthentication } from './components/withAuthentication';\n\nexport default AzureAD;\n"],"sourceRoot":""}