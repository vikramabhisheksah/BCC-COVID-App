{"version":3,"sources":["../../src/IdTokenResponse.ts"],"names":["IdTokenResponse","response","tokenType","TokenType","IdToken","Error","idToken","state","accountState"],"mappings":";;;;;;;AAGA;;;;;;IAEaA,e,GAIX,yBAAYC,QAAZ,EAAoC;AAAA;;AAAA;;AAAA,iCAFrB,EAEqB;;AAClC,MAAIA,QAAQ,CAACC,SAAT,KAAuBC,iBAAUC,OAArC,EAA8C;AAC5C,UAAM,IAAIC,KAAJ,6FACgFJ,QAAQ,CAACC,SADzF,SAAN;AAGD;;AAED,OAAKI,OAAL,GAAeL,QAAQ,CAACK,OAAxB;AACA,OAAKC,KAAL,GAAaN,QAAQ,CAACO,YAAtB;AACD,C","sourcesContent":["import { AuthResponse } from 'msal';\nimport { IdToken } from 'msal/lib-commonjs/IdToken';\n\nimport { TokenType } from './enums';\n\nexport class IdTokenResponse {\n  public idToken: IdToken;\n  public state = '';\n\n  constructor(response: AuthResponse) {\n    if (response.tokenType !== TokenType.IdToken) {\n      throw new Error(\n        `Can't construct an IdTokenResponse from a AuthResponse that has a token type of \"${response.tokenType}\".`,\n      );\n    }\n\n    this.idToken = response.idToken;\n    this.state = response.accountState;\n  }\n}\n"],"file":"IdTokenResponse.js"}