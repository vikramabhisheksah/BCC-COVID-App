{"version":3,"sources":["../../src/AccessTokenResponse.ts"],"names":["AccessTokenResponse","response","tokenType","TokenType","AccessToken","Error","accessToken","expiresOn","scopes","state","accountState"],"mappings":";;;;;;;AAEA;;;;;;IAEaA,mB,GAMX,6BAAYC,QAAZ,EAAoC;AAAA;;AAAA,uCALf,EAKe;;AAAA,kCAJV,EAIU;;AAAA;;AAAA,iCAFrB,EAEqB;;AAClC,MAAIA,QAAQ,CAACC,SAAT,KAAuBC,iBAAUC,WAArC,EAAkD;AAChD,UAAM,IAAIC,KAAJ,iGACoFJ,QAAQ,CAACC,SAD7F,SAAN;AAGD;;AAED,OAAKI,WAAL,GAAmBL,QAAQ,CAACK,WAA5B;AACA,OAAKC,SAAL,GAAiBN,QAAQ,CAACM,SAA1B;AACA,OAAKC,MAAL,GAAcP,QAAQ,CAACO,MAAvB;AACA,OAAKC,KAAL,GAAaR,QAAQ,CAACS,YAAtB;AACD,C","sourcesContent":["import { AuthResponse } from 'msal';\n\nimport { TokenType } from './enums';\n\nexport class AccessTokenResponse {\n  public accessToken = '';\n  public scopes: string[] = [];\n  public expiresOn: Date;\n  public state = '';\n\n  constructor(response: AuthResponse) {\n    if (response.tokenType !== TokenType.AccessToken) {\n      throw new Error(\n        `Can't construct an AccessTokenResponse from a AuthResponse that has a token type of \"${response.tokenType}\".`,\n      );\n    }\n\n    this.accessToken = response.accessToken;\n    this.expiresOn = response.expiresOn;\n    this.scopes = response.scopes;\n    this.state = response.accountState;\n  }\n}\n"],"file":"AccessTokenResponse.js"}