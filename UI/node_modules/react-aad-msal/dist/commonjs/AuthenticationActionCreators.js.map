{"version":3,"sources":["../../src/AuthenticationActionCreators.ts"],"names":["AuthenticationActionCreators","type","AuthenticationActions","Initializing","Initialized","data","payload","LoginSuccess","LoginFailed","error","LoginError","ClearError","LogoutSuccess","token","AcquiredIdTokenSuccess","AcquiredIdTokenError","AcquiredAccessTokenSuccess","AcquiredAccessTokenError","state","AuthenticatedStateChanged"],"mappings":";;;;;;;AAKA;;;;;;IAEsBA,4B;;;;;;gBAAAA,4B,kBACS;AAAA,SAAkB;AAC7CC,IAAAA,IAAI,EAAEC,6BAAsBC;AADiB,GAAlB;AAAA,C;;gBADTH,4B,iBAKQ;AAAA,SAAkB;AAC5CC,IAAAA,IAAI,EAAEC,6BAAsBE;AADgB,GAAlB;AAAA,C;;gBALRJ,4B,qBASY,UAACK,IAAD;AAAA,SAAoC;AAClEC,IAAAA,OAAO,EAAED,IADyD;AAElEJ,IAAAA,IAAI,EAAEC,6BAAsBK;AAFsC,GAApC;AAAA,C;;gBATZP,4B,iBAcQ;AAAA,SAAkB;AAC5CC,IAAAA,IAAI,EAAEC,6BAAsBM;AADgB,GAAlB;AAAA,C;;gBAdRR,4B,gBAkBO,UAACS,KAAD;AAAA,SAAkC;AAC3DH,IAAAA,OAAO,EAAEG,KADkD;AAE3DR,IAAAA,IAAI,EAAEC,6BAAsBQ;AAF+B,GAAlC;AAAA,C;;gBAlBPV,4B,gBAuBO;AAAA,SAAkB;AAC3CC,IAAAA,IAAI,EAAEC,6BAAsBS;AADe,GAAlB;AAAA,C;;gBAvBPX,4B,sBA2Ba;AAAA,SAAkB;AACjDC,IAAAA,IAAI,EAAEC,6BAAsBU;AADqB,GAAlB;AAAA,C;;gBA3BbZ,4B,2BA+BkB,UAACa,KAAD;AAAA,SAAwC;AAC5EP,IAAAA,OAAO,EAAEO,KADmE;AAE5EZ,IAAAA,IAAI,EAAEC,6BAAsBY;AAFgD,GAAxC;AAAA,C;;gBA/BlBd,4B,yBAoCgB,UAACS,KAAD;AAAA,SAAkC;AACpEH,IAAAA,OAAO,EAAEG,KAD2D;AAEpER,IAAAA,IAAI,EAAEC,6BAAsBa;AAFwC,GAAlC;AAAA,C;;gBApChBf,4B,+BAyCsB,UAACa,KAAD;AAAA,SAA4C;AACpFP,IAAAA,OAAO,EAAEO,KAD2E;AAEpFZ,IAAAA,IAAI,EAAEC,6BAAsBc;AAFwD,GAA5C;AAAA,C;;gBAzCtBhB,4B,6BA8CoB,UAACS,KAAD;AAAA,SAAkC;AACxEH,IAAAA,OAAO,EAAEG,KAD+D;AAExER,IAAAA,IAAI,EAAEC,6BAAsBe;AAF4C,GAAlC;AAAA,C;;gBA9CpBjB,4B,+BAmDsB,UAACkB,KAAD;AAAA,SAA4C;AACpFZ,IAAAA,OAAO,EAAEY,KAD2E;AAEpFjB,IAAAA,IAAI,EAAEC,6BAAsBiB;AAFwD,GAA5C;AAAA,C","sourcesContent":["import { AuthError } from 'msal';\nimport { AnyAction } from 'redux';\nimport { AccessTokenResponse } from './AccessTokenResponse';\nimport { IdTokenResponse } from './IdTokenResponse';\nimport { IAccountInfo } from './interfaces';\nimport { AuthenticationActions, AuthenticationState } from './enums';\n\nexport abstract class AuthenticationActionCreators {\n  public static initializing = (): AnyAction => ({\n    type: AuthenticationActions.Initializing,\n  });\n\n  public static initialized = (): AnyAction => ({\n    type: AuthenticationActions.Initialized,\n  });\n\n  public static loginSuccessful = (data: IAccountInfo): AnyAction => ({\n    payload: data,\n    type: AuthenticationActions.LoginSuccess,\n  });\n\n  public static loginFailed = (): AnyAction => ({\n    type: AuthenticationActions.LoginFailed,\n  });\n\n  public static loginError = (error: AuthError): AnyAction => ({\n    payload: error,\n    type: AuthenticationActions.LoginError,\n  });\n\n  public static clearError = (): AnyAction => ({\n    type: AuthenticationActions.ClearError,\n  });\n\n  public static logoutSuccessful = (): AnyAction => ({\n    type: AuthenticationActions.LogoutSuccess,\n  });\n\n  public static acquireIdTokenSuccess = (token: IdTokenResponse): AnyAction => ({\n    payload: token,\n    type: AuthenticationActions.AcquiredIdTokenSuccess,\n  });\n\n  public static acquireIdTokenError = (error: AuthError): AnyAction => ({\n    payload: error,\n    type: AuthenticationActions.AcquiredIdTokenError,\n  });\n\n  public static acquireAccessTokenSuccess = (token: AccessTokenResponse): AnyAction => ({\n    payload: token,\n    type: AuthenticationActions.AcquiredAccessTokenSuccess,\n  });\n\n  public static acquireAccessTokenError = (error: AuthError): AnyAction => ({\n    payload: error,\n    type: AuthenticationActions.AcquiredAccessTokenError,\n  });\n\n  public static authenticatedStateChanged = (state: AuthenticationState): AnyAction => ({\n    payload: state,\n    type: AuthenticationActions.AuthenticatedStateChanged,\n  });\n}\n"],"file":"AuthenticationActionCreators.js"}