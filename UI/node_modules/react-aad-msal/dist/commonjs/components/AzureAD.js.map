{"version":3,"sources":["../../../src/components/AzureAD.tsx"],"names":["AzureAD","props","authenticatedFunction","unauthenticatedFunction","provider","forceLogin","accountInfoCallback","getAccountInfo","accountInfo","_setAccountInfo","authenticationState","_setAuthenticationState","getError","error","_setError","registerAuthenticationStateHandler","setAuthenticationState","registerAcountInfoHandler","onAccountInfoChanged","registerErrorHandler","setError","reduxStore","registerReduxStore","AuthenticationState","Unauthenticated","login","unregisterAuthenticationStateHandler","unregisterAccountInfoHandler","unregisterErrorHandler","logout","Authenticated","newState","newError","newAccountInfo","console","warn","childrenFunctionProps","getChildrenOrFunction","children","childrenProps","isChildrenFunction","authFunctionResult","InProgress","displayName"],"mappings":"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","sourcesContent":["import { default as React, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Store } from 'redux';\n\nimport { AuthError } from 'msal';\nimport { MsalAuthProvider } from '..';\nimport { IAccountInfo } from '../interfaces';\nimport { AuthenticationState } from '../enums';\n\ntype AccountInfoCallback = (token: IAccountInfo) => void;\ntype UnauthenticatedFunction = (login: LoginFunction) => JSX.Element;\ntype AuthenticatedFunction = (logout: LogoutFunction) => JSX.Element;\ntype LoginFunction = () => void;\ntype LogoutFunction = () => void;\n\nexport interface IAzureADFunctionProps {\n  login: LoginFunction;\n  logout: LogoutFunction;\n  authenticationState: AuthenticationState;\n  accountInfo: IAccountInfo | null;\n  error: AuthError | null;\n}\n\nexport interface IAzureADProps {\n  provider: MsalAuthProvider;\n  unauthenticatedFunction?: UnauthenticatedFunction;\n  authenticatedFunction?: AuthenticatedFunction;\n  accountInfoCallback?: AccountInfoCallback;\n  reduxStore?: Store;\n  forceLogin?: boolean;\n}\n\nexport const AzureAD: React.FunctionComponent<IAzureADProps> = props => {\n  const { authenticatedFunction, unauthenticatedFunction, provider, forceLogin, accountInfoCallback } = props;\n  const [accountInfo, _setAccountInfo] = useState(provider.getAccountInfo());\n  const [authenticationState, _setAuthenticationState] = useState(provider.authenticationState);\n  const [error, _setError] = useState(provider.getError());\n\n  // On component mounted\n  useEffect(() => {\n    provider.registerAuthenticationStateHandler(setAuthenticationState);\n    provider.registerAcountInfoHandler(onAccountInfoChanged);\n    provider.registerErrorHandler(setError);\n\n    if (props.reduxStore) {\n      provider.registerReduxStore(props.reduxStore);\n    }\n\n    if (forceLogin && authenticationState === AuthenticationState.Unauthenticated && !error) {\n      login();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      provider.unregisterAuthenticationStateHandler(setAuthenticationState);\n      provider.unregisterAccountInfoHandler(onAccountInfoChanged);\n      provider.unregisterErrorHandler(setError);\n    };\n  }, [authenticationState, accountInfo, error]);\n\n  const login = useCallback(() => {\n    provider.login();\n  }, [provider]);\n\n  const logout = useCallback(() => {\n    if (authenticationState !== AuthenticationState.Authenticated) {\n      return;\n    }\n    provider.logout();\n  }, [authenticationState, provider]);\n\n  const setAuthenticationState = useCallback(\n    (newState: AuthenticationState) => {\n      if (newState !== authenticationState) {\n        _setAuthenticationState(newState);\n\n        if (newState === AuthenticationState.Unauthenticated && forceLogin && !error) {\n          login();\n        }\n      }\n    },\n    [authenticationState, forceLogin, error],\n  );\n\n  const setError = useCallback(\n    (newError: AuthError) => {\n      if (newError !== error) {\n        _setError(newError);\n      }\n    },\n    [error],\n  );\n\n  const onAccountInfoChanged = useCallback(\n    (newAccountInfo: IAccountInfo) => {\n      _setAccountInfo(newAccountInfo);\n\n      if (accountInfoCallback) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The accountInfoCallback callback has been deprecated and will be removed in a future release.',\n        );\n        accountInfoCallback(newAccountInfo);\n      }\n    },\n    [accountInfoCallback],\n  );\n\n  // The authentication data to be passed to the children() if it's a function\n  const childrenFunctionProps = useMemo<IAzureADFunctionProps>(\n    () => ({\n      accountInfo,\n      authenticationState,\n      error,\n      login,\n      logout,\n    }),\n    [accountInfo, authenticationState, error, login, logout],\n  );\n\n  /**\n   * @param children\n   * @param childrenProps\n   */\n  function getChildrenOrFunction(children: any, childrenProps: IAzureADFunctionProps) {\n    if (children) {\n      // tslint:disable-next-line: triple-equals\n      if (isChildrenFunction(children)) {\n        return (children as (props: IAzureADFunctionProps) => {})(childrenProps);\n      } else {\n        return children;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * @param children\n   */\n  function isChildrenFunction(children: any) {\n    return typeof children == 'function' || false;\n  }\n\n  // Render logic\n  switch (authenticationState) {\n    case AuthenticationState.Authenticated:\n      if (authenticatedFunction) {\n        const authFunctionResult = authenticatedFunction(logout);\n\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The authenticatedFunction callback has been deprecated and will be removed in a future release.',\n        );\n\n        if (authFunctionResult) {\n          return authFunctionResult;\n        }\n      }\n\n      // If there is no authenticatedFunction, or it returned null, render the children\n      return getChildrenOrFunction(props.children, childrenFunctionProps);\n    case AuthenticationState.Unauthenticated:\n      if (unauthenticatedFunction) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Warning! The unauthenticatedFunction callback has been deprecated and will be removed in a future release.',\n        );\n        return unauthenticatedFunction(login) || null;\n      }\n\n    // If state is Uauthenticated or InProgress, only return the children if it's a function\n    // If the children prop is a function, we will pass state changes to be handled by the consumer\n    // eslint-disable-next-line no-fallthrough\n    case AuthenticationState.InProgress:\n      if (isChildrenFunction(props.children)) {\n        return getChildrenOrFunction(props.children, childrenFunctionProps);\n      }\n      return null;\n    default:\n      return null;\n  }\n};\n\nAzureAD.displayName = 'AzureAD';\n"],"file":"AzureAD.js"}