{"version":3,"sources":["../../../src/components/withAuthentication.tsx"],"names":["withAuthentication","WrappedComponent","parameters","props","propParams","forceLogin","displayName","name"],"mappings":";;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;AAEO,IAAMA,kBAAkB,GAAG,4BAChCC,gBADgC,EAEhCC,UAFgC,EAGD;AAE/B,MAAMF,kBAA2C,GAAG,SAA9CA,kBAA8C,CAACG,KAAD,EAAgB;AAClE,QAAMC,UAAyB;AAAKC,MAAAA,UAAU,EAAE;AAAjB,OAA0BH,UAA1B,CAA/B;;AAEAF,IAAAA,kBAAkB,CAACM,WAAnB,gCAAuDL,gBAAgB,CAACK,WAAjB,IAAgCL,gBAAgB,CAACM,IAAxG;AACA,WACE,oBAAC,gBAAD,EAAaH,UAAb,EACE,oBAAC,gBAAD,EAAsBD,KAAtB,CADF,CADF;AAKD,GATD;;AAWA,SAAOH,kBAAP;AACD,CAjBM","sourcesContent":["import * as React from 'react';\n\nimport { AzureAD, IAzureADProps } from './AzureAD';\n\nexport const withAuthentication = <P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  parameters: IAzureADProps,\n): React.FunctionComponent<P> => {\n  // tslint:disable-next-line: no-shadowed-variable\n  const withAuthentication: React.FunctionComponent = (props: any) => {\n    const propParams: IAzureADProps = { forceLogin: true, ...parameters };\n\n    withAuthentication.displayName = `withAuthentication(${WrappedComponent.displayName || WrappedComponent.name}`;\n    return (\n      <AzureAD {...propParams}>\n        <WrappedComponent {...props} />\n      </AzureAD>\n    );\n  };\n\n  return withAuthentication;\n};\n"],"file":"withAuthentication.js"}